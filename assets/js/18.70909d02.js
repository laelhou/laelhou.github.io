(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{445:function(s,a,n){"use strict";n.r(a);var t=n(19),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("JavaScript 中的 "),n("code",[s._v("this")]),s._v("，因其灵活的指向、复杂的使用场景一直是面试中的热点，不论是初级还是中高级开发者，这都是一道必考题。这个概念虽然基础，但是非常重要，是否能深刻理解 "),n("code",[s._v("this")]),s._v("，是前端 JavaScript 中进阶的重要一环。"),n("code",[s._v("this")]),s._v(" 指向多变，很多隐蔽的 bug 都缘于它。与此同时，"),n("code",[s._v("this")]),s._v(" 强大灵活，如果能熟练驾驭，就会写出更简洁、优雅的代码。")]),s._v(" "),n("p",[s._v("社区上对于 "),n("code",[s._v("this")]),s._v(" 的讲解虽然不少，但缺乏统一梳理。本节课，让我们直面 "),n("code",[s._v("this")]),s._v(" 的方方面面，并通过例题真正领会与掌握 "),n("code",[s._v("this")]),s._v("。")]),s._v(" "),n("p",[n("code",[s._v("this")]),s._v(" 相关知识点如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://images.gitbook.cn/be333ca0-4eca-11e9-b0b8-a9c8a3696845",alt:"null"}})]),s._v(" "),n("h3",{attrs:{id:"this-到底指向谁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#this-到底指向谁"}},[s._v("#")]),s._v(" "),n("font",{attrs:{color:"13aa6c"}},[s._v("this 到底指向谁")])],1),s._v(" "),n("p",[s._v("曾经在面试阿里某重点部门时，面试官从多个角度考察过我对 "),n("code",[s._v("this")]),s._v(" 的理解：全局环境下的"),n("code",[s._v("this")]),s._v("、箭头函数的 "),n("code",[s._v("this")]),s._v("、构造函数的 "),n("code",[s._v("this")]),s._v("、"),n("code",[s._v("this")]),s._v(" 的显隐性和优先级，等等。尽管我能一一作答，可是最后的问题："),n("strong",[s._v("请用一句话总结 "),n("code",[s._v("this")]),s._v(" 的指向，注意只用一句话。")]),s._v(" 我却犯难了。")]),s._v(" "),n("p",[s._v("有一种广泛流传的说法是：")]),s._v(" "),n("blockquote",[n("p",[s._v("谁调用它，"),n("code",[s._v("this")]),s._v(" 就指向谁。")])]),s._v(" "),n("p",[s._v("也就是说，"),n("code",[s._v("this")]),s._v(" 的指向是在调用时确定的。这么说没有太大的问题，可是并不全面。面试官要求我用更加规范的语言进行总结，那么他到底在等什么样的回答呢？")]),s._v(" "),n("p",[s._v("我们还要回到 JavaScript 中一个最基本的概念分析——"),n("strong",[s._v("执行上下文")]),s._v("，这个概念，我们会在下一讲《老司机也会在闭包相关知识点翻车》中进行扩展。")]),s._v(" "),n("p",[s._v("事实上，调用函数会创建新的属于函数自身的执行上下文。执行上下文的调用创建阶段会决定 "),n("code",[s._v("this")]),s._v(" 的指向。到此，我们可以得出的一个结论：")]),s._v(" "),n("div",{staticStyle:{color:"#024727",background:"#f9f9f9"}},[n("p",{staticStyle:{padding:"10px"}},[n("code",[s._v("this")]),s._v(" 的指向，是在调用函数时根据执行上下文所动态确定的。")])]),s._v(" "),n("p",[s._v("具体环节和规则，可以先“死记硬背”以下几条规律，后面再慢慢一一分析：")]),s._v(" "),n("ul",[n("li",[s._v("在函数体中，简单调用该函数时（非显式/隐式绑定下），严格模式下 "),n("code",[s._v("this")]),s._v(" 绑定到 "),n("code",[s._v("undefined")]),s._v("，否则绑定到全局对象 "),n("code",[s._v("window")]),s._v("／"),n("code",[s._v("global")]),s._v("；")]),s._v(" "),n("li",[s._v("一般构造函数 "),n("code",[s._v("new")]),s._v(" 调用，绑定到新创建的对象上；")]),s._v(" "),n("li",[s._v("一般由 "),n("code",[s._v("call")]),s._v("/"),n("code",[s._v("apply")]),s._v("/"),n("code",[s._v("bind")]),s._v(" 方法显式调用，绑定到指定参数的对象上；")]),s._v(" "),n("li",[s._v("一般由上下文对象调用，绑定在该对象上；")]),s._v(" "),n("li",[s._v("箭头函数中，根据外层上下文绑定的 "),n("code",[s._v("this")]),s._v(" 决定 "),n("code",[s._v("this")]),s._v(" 指向。")])]),s._v(" "),n("p",[s._v("当然，真实环境多样，我们来逐一梳理。")]),s._v(" "),n("blockquote",[n("p",[n("a",{attrs:{href:"http://gitbook.cn/m/mazi/comp/column?columnId=5c91c813968b1d64b1e08fde&utm_source=hcsd001",target:"_blank",rel:"noopener noreferrer"}},[s._v("点击了解更多《前端开发核心知识进阶》"),n("OutboundLink")],1)])]),s._v(" "),n("h3",{attrs:{id:"实战例题分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实战例题分析"}},[s._v("#")]),s._v(" "),n("font",{attrs:{color:"13aa6c"}},[s._v("实战例题分析")])],1),s._v(" "),n("h4",{attrs:{id:"例题组合-1：全局环境下的-this"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例题组合-1：全局环境下的-this"}},[s._v("#")]),s._v(" 例题组合 1：全局环境下的 this")]),s._v(" "),n("p",[s._v("这种情况相对简单直接，函数在浏览器全局环境中被简单调用，非严格模式下 "),n("code",[s._v("this")]),s._v(" 指向 "),n("code",[s._v("window")]),s._v("；在 "),n("code",[s._v("use strict")]),s._v(" 指明严格模式的情况下就是 "),n("code",[s._v("undefined")]),s._v("。我们来看例题，请描述打印结果：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("span "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hljs-function"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("span "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hljs-keyword"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("span"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("¨"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NBSP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("span "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hljs-title"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("f1"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("span"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("span "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hljs-params"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("span"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("span"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("span "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hljs-built_in"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("console"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("span"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("span "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hljs-keyword"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("span"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("span "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hljs-function"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("span "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hljs-keyword"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("span"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("span "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hljs-title"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("f2"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("span"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("span "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hljs-params"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("span"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("span"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("span "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hljs-meta"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'use strict'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("span"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("span "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hljs-built_in"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("console"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("span"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("span "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hljs-keyword"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("span"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("f1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("span "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hljs-comment"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// window</span>")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("f2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("span "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hljs-comment"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined</span>")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("这样的题目比较基础，但是需要候选人格外注意其变种，请再看一道题目：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-keyword">const</span> foo = {\n    <span class="hljs-attr">bar</span>: <span class="hljs-number">10</span>,\n    <span class="hljs-attr">fn</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n       <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>)\n       <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.bar)\n    }\n}\n<span class="hljs-keyword">var</span> fn1 = foo.fn\nfn1()\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("这里 "),n("code",[s._v("this")]),s._v(" 仍然指向的是 "),n("code",[s._v("window")]),s._v("。虽然 "),n("code",[s._v("fn")]),s._v(" 函数在 "),n("code",[s._v("foo")]),s._v(" 对象中作为方法被引用，但是在赋值给 "),n("code",[s._v("fn1")]),s._v(" 之后，"),n("code",[s._v("fn1")]),s._v(" 的执行仍然是在 "),n("code",[s._v("window")]),s._v(" 的全局环境中。因此输出 "),n("code",[s._v("window")]),s._v(" 和 "),n("code",[s._v("undefined")]),s._v("，它们相当于：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">window</span>)\n<span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">window</span>.bar)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("还是上面这道题目，如果调用改变为：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-keyword">const</span> foo = {\n    <span class="hljs-attr">bar</span>: <span class="hljs-number">10</span>,\n    <span class="hljs-attr">fn</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n       <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>)\n       <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.bar)\n    }\n}\nfoo.fn()\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("将会输出：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('{<span class="hljs-attribute">bar</span>: <span class="hljs-number">10</span>, fn: ƒ}\n10\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("因为这个时候 "),n("code",[s._v("this")]),s._v(" 指向的是最后调用它的对象，在 "),n("code",[s._v("foo.fn()")]),s._v(" 语句中 "),n("code",[s._v("this")]),s._v(" 指向 "),n("code",[s._v("foo")]),s._v(" 对象。请记住：")]),s._v(" "),n("div",{staticStyle:{color:"#024727",background:"#f9f9f9"}},[n("p",{staticStyle:{padding:"10px"}},[s._v("在执行函数时，如果函数中的 "),n("code",[s._v("this")]),s._v(" 是被上一级的对象所调用，那么 "),n("code",[s._v("this")]),s._v(" 指向的就是上一级的对象；否则指向全局环境。")])]),s._v(" "),n("h4",{attrs:{id:"例题组合-2：上下文对象调用中的-this"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例题组合-2：上下文对象调用中的-this"}},[s._v("#")]),s._v(" 例题组合 2：上下文对象调用中的 this")]),s._v(" "),n("p",[s._v("如上结论，面对下题时我们便不再困惑：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-keyword">const</span> student = {\n    <span class="hljs-attr">name</span>: <span class="hljs-string">\'Lucas\'</span>,\n    <span class="hljs-attr">fn</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>\n    }\n}\n<span class="hljs-built_in">console</span>.log(student.fn() === student)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("最终结果将会返回 "),n("code",[s._v("true")]),s._v("。")]),s._v(" "),n("p",[s._v("当存在更复杂的调用关系时，请看例题：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-keyword">const</span> person = {\n    <span class="hljs-attr">name</span>: <span class="hljs-string">\'Lucas\'</span>,\n    <span class="hljs-attr">brother</span>: {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">\'Mike\'</span>,\n        <span class="hljs-attr">fn</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n            <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.name\n        }\n    }\n}\n<span class="hljs-built_in">console</span>.log(person.brother.fn())\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("在这种嵌套的关系中，"),n("code",[s._v("this")]),s._v(" 指向"),n("strong",[s._v("最后")]),s._v("调用它的对象，因此输出将会是："),n("code",[s._v("Mike")]),s._v("。")]),s._v(" "),n("p",[s._v("到此，"),n("code",[s._v("this")]),s._v(" 的上下文对象调用已经理解得比较清楚了。我们再看一道更高阶的题目：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-keyword">const</span> o1 = {\n    <span class="hljs-attr">text</span>: <span class="hljs-string">\'o1\'</span>,\n    <span class="hljs-attr">fn</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.text\n    }\n}\n<span class="hljs-keyword">const</span> o2 = {\n    <span class="hljs-attr">text</span>: <span class="hljs-string">\'o2\'</span>,\n    <span class="hljs-attr">fn</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n        <span class="hljs-keyword">return</span> o1.fn()\n    }\n}\n<span class="hljs-keyword">const</span> o3 = {\n    <span class="hljs-attr">text</span>: <span class="hljs-string">\'o3\'</span>,\n    <span class="hljs-attr">fn</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n        <span class="hljs-keyword">var</span> fn = o1.fn\n        <span class="hljs-keyword">return</span> fn()\n    }\n}\n\n<span class="hljs-built_in">console</span>.log(o1.fn())\n<span class="hljs-built_in">console</span>.log(o2.fn())\n<span class="hljs-built_in">console</span>.log(o3.fn())\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])]),n("p",[s._v("答案是："),n("code",[s._v("o1")]),s._v("、"),n("code",[s._v("o1")]),s._v("、"),n("code",[s._v("undefined")]),s._v("，你答对了吗？")]),s._v(" "),n("p",[s._v("我们来一一分析。")]),s._v(" "),n("ul",[n("li",[s._v("第一个 "),n("code",[s._v("console")]),s._v(" 最简单，"),n("code",[s._v("o1")]),s._v(" 没有问题。难点在第二个和第三个上面，关键还是看调用 "),n("code",[s._v("this")]),s._v(" 的那个函数。")]),s._v(" "),n("li",[s._v("第二个 "),n("code",[s._v("console")]),s._v(" 的 "),n("code",[s._v("o2.fn()")]),s._v("，最终还是调用 "),n("code",[s._v("o1.fn()")]),s._v("，因此答案仍然是 "),n("code",[s._v("o1")]),s._v("。")]),s._v(" "),n("li",[s._v("最后一个，在进行 "),n("code",[s._v("var fn = o1.fn")]),s._v(" 赋值之后，是“裸奔”调用，因此这里的 "),n("code",[s._v("this")]),s._v(" 指向 "),n("code",[s._v("window")]),s._v("，答案当然是 "),n("code",[s._v("undefined")]),s._v("。")])]),s._v(" "),n("p",[s._v("如果面试者回答顺利，可以紧接着追问，如果我们需要让：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-selector-tag">console</span><span class="hljs-selector-class">.log</span>(<span class="hljs-selector-tag">o2</span><span class="hljs-selector-class">.fn</span>())\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出 "),n("code",[s._v("o2")]),s._v("，该怎么做？")]),s._v(" "),n("p",[s._v("一般开发者可能会想到使用 "),n("code",[s._v("bind/call/apply")]),s._v(" 来对 "),n("code",[s._v("this")]),s._v(" 的指向进行干预，这确实是一种思路。但是我接着问，"),n("strong",[s._v("如果不能使用 "),n("code",[s._v("bind/call/apply")]),s._v("，有别的方法吗？")])]),s._v(" "),n("p",[s._v("这样可以考察候选人基础掌握的深度以及随机应变的思维能力。答案为：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-keyword">const</span> o1 = {\n    <span class="hljs-attr">text</span>: <span class="hljs-string">\'o1\'</span>,\n    <span class="hljs-attr">fn</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.text\n    }\n}\n<span class="hljs-keyword">const</span> o2 = {\n    <span class="hljs-attr">text</span>: <span class="hljs-string">\'o2\'</span>,\n    <span class="hljs-attr">fn</span>: o1.fn\n}\n\n<span class="hljs-built_in">console</span>.log(o2.fn())\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("还是应用那个重要的结论："),n("code",[s._v("this")]),s._v(" 指向"),n("strong",[s._v("最后")]),s._v("调用它的对象，在 "),n("code",[s._v("fn")]),s._v(" 执行时，挂到 "),n("code",[s._v("o2")]),s._v(" 对象上即可，我们提前进行了赋值操作。")]),s._v(" "),n("h4",{attrs:{id:"例题组合-3：bind-call-apply-改变-this-指向"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例题组合-3：bind-call-apply-改变-this-指向"}},[s._v("#")]),s._v(" 例题组合 3：bind/call/apply 改变 this 指向")]),s._v(" "),n("p",[s._v("上文提到 bind/call/apply，在这个概念上，比较常见的基础考察点是："),n("strong",[s._v("bind/call/apply 三个方法的区别。")])]),s._v(" "),n("p",[s._v("这样的问题相对基础，我们直接上答案：一句话总结，他们都是用来改变相关函数 "),n("code",[s._v("this")]),s._v(" 指向的，但是 "),n("code",[s._v("call/apply")]),s._v(" 是直接进行相关函数调用；"),n("code",[s._v("bind")]),s._v(" 不会执行相关函数，而是返回一个新的函数，这个新的函数已经自动绑定了新的 "),n("code",[s._v("this")]),s._v(" 指向，开发者需要手动调用即可。再具体的 "),n("code",[s._v("call/apply")]),s._v(" 之间的区别主要体现在参数设定上，这里不再展开。")]),s._v(" "),n("p",[s._v("用代码来总结：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-keyword">const</span> target = {}\nfn.call(target, <span class="hljs-string">\'arg1\'</span>, <span class="hljs-string">\'arg2\'</span>)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("相当于：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-keyword">const</span> target = {}\nfn.apply(target, [<span class="hljs-string">\'arg1\'</span>, <span class="hljs-string">\'arg2\'</span>])\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("相当于：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-keyword">const</span> target = {}\nfn.bind(target, <span class="hljs-string">\'arg1\'</span>, <span class="hljs-string">\'arg2\'</span>)()\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("具体基础用法这里不再科普，如果读者尚不清楚，需要自己补充一下知识点。")]),s._v(" "),n("p",[s._v("我们来看一道例题分析：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-keyword">const</span> foo = {\n    <span class="hljs-attr">name</span>: <span class="hljs-string">\'lucas\'</span>,\n    <span class="hljs-attr">logName</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n        <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.name)\n    }\n}\n<span class="hljs-keyword">const</span> bar = {\n    <span class="hljs-attr">name</span>: <span class="hljs-string">\'mike\'</span>\n}\n<span class="hljs-built_in">console</span>.log(foo.logName.call(bar))\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("将会输出 "),n("code",[s._v("mike")]),s._v("，这不难理解。"),n("strong",[s._v("但是对 call/apply/bind 的高级考察往往会结合构造函数以及组合式实现继承。实现继承的话题，我们会单独讲到。构造函数的使用案例，我们结合接下来的例题组合进行分析。")])]),s._v(" "),n("h4",{attrs:{id:"例题组合-4：构造函数和-this"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例题组合-4：构造函数和-this"}},[s._v("#")]),s._v(" 例题组合 4：构造函数和 this")]),s._v(" "),n("p",[s._v("这方面最直接的例题为：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Foo</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">this</span>.bar = <span class="hljs-string">"Lucas"</span>\n}\n<span class="hljs-keyword">const</span> instance = <span class="hljs-keyword">new</span> Foo()\n<span class="hljs-built_in">console</span>.log(instance.bar)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("答案将会输出 "),n("code",[s._v("Lucas")]),s._v("。但是这样的场景往往伴随着下一个问题：**"),n("code",[s._v("new")]),s._v(" 操作符调用构造函数，具体做了什么？**以下供参考：")]),s._v(" "),n("ul",[n("li",[s._v("创建一个新的对象；")]),s._v(" "),n("li",[s._v("将构造函数的 "),n("code",[s._v("this")]),s._v(" 指向这个新对象；")]),s._v(" "),n("li",[s._v("为这个对象添加属性、方法等；")]),s._v(" "),n("li",[s._v("最终返回新对象。")])]),s._v(" "),n("p",[s._v("以上过程，也可以用代码表述：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-keyword">var</span> obj  = {}\nobj.__proto__ = Foo.prototype\nFoo.call(obj)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("当然，这里对 "),n("code",[s._v("new")]),s._v(" 的模拟是一个简单基本版的，更复杂的情况我们会在原型、原型链相关的第2-5课《面向对象和原型——永不过时的话题》中讲述。")]),s._v(" "),n("p",[s._v("需要指出的是，如果在构造函数中出现了显式 "),n("code",[s._v("return")]),s._v(" 的情况，那么需要注意分为两种场景：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Foo</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">this</span>.user = <span class="hljs-string">"Lucas"</span>\n    <span class="hljs-keyword">const</span> o = {}\n    <span class="hljs-keyword">return</span> o\n}\n<span class="hljs-keyword">const</span> instance = <span class="hljs-keyword">new</span> Foo()\n<span class="hljs-built_in">console</span>.log(instance.user)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("将会输出 "),n("code",[s._v("undefined")]),s._v("，此时 "),n("code",[s._v("instance")]),s._v(" 是返回的空对象 "),n("code",[s._v("o")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Foo</span>(<span class="hljs-params"></span>)</span>{\n    <span class="hljs-keyword">this</span>.user = <span class="hljs-string">"Lucas"</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>\n}\n<span class="hljs-keyword">const</span> instance = <span class="hljs-keyword">new</span> Foo()\n<span class="hljs-built_in">console</span>.log(instance.user)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("将会输出 "),n("code",[s._v("Lucas")]),s._v("，也就是说此时 "),n("code",[s._v("instance")]),s._v(" 是返回的目标对象实例 "),n("code",[s._v("this")]),s._v("。")]),s._v(" "),n("div",{staticStyle:{color:"#024727",background:"#f9f9f9"}},[n("p",{staticStyle:{padding:"10px"}},[n("strong",[s._v("结论：")]),s._v("如果构造函数中显式返回一个值，且返回的是一个对象，那么 "),n("code",[s._v("this")]),s._v(" 就指向这个返回的对象；如果返回的不是一个对象，那么 "),n("code",[s._v("this")]),s._v(" 仍然指向实例。")])]),s._v(" "),n("h4",{attrs:{id:"例题组合-5：箭头函数中的-this-指向"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例题组合-5：箭头函数中的-this-指向"}},[s._v("#")]),s._v(" 例题组合 5：箭头函数中的 this 指向")]),s._v(" "),n("p",[s._v("首先我们再来温习一下相关结论。")]),s._v(" "),n("div",{staticStyle:{color:"#024727",background:"#f9f9f9"}},[n("p",{staticStyle:{padding:"10px"}},[n("strong",[s._v("结论：")]),s._v("箭头函数使用 "),n("code",[s._v("this")]),s._v(" 不适用以上标准规则，而是根据外层（函数或者全局）上下文来决定。")])]),s._v(" "),n("p",[s._v("来看题目：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-keyword">const</span> foo = {  \n    <span class="hljs-attr">fn</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{  \n        setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{  \n            <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>)\n        })\n    }  \n}  \n<span class="hljs-built_in">console</span>.log(foo.fn())\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("这道题中，"),n("code",[s._v("this")]),s._v(" 出现在 "),n("code",[s._v("setTimeout()")]),s._v(" 中的匿名函数里，因此 "),n("code",[s._v("this")]),s._v(" 指向 "),n("code",[s._v("window")]),s._v(" 对象。如果需要 "),n("code",[s._v("this")]),s._v(" 指向 "),n("code",[s._v("foo")]),s._v(" 这个 object 对象，可以巧用箭头函数解决：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-keyword">const</span> foo = {  \n    <span class="hljs-attr">fn</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{  \n        setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =></span> {  \n            <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>)\n        })\n    }  \n} \n<span class="hljs-built_in">console</span>.log(foo.fn())\n\n<span class="hljs-comment">// {fn: ƒ}</span>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("单纯箭头函数中的 "),n("code",[s._v("this")]),s._v(" 非常简单，"),n("strong",[s._v("但是综合所有情况，结合 "),n("code",[s._v("this")]),s._v(" 的优先级考察，这时候 "),n("code",[s._v("this")]),s._v(" 指向并不好确定。请继续阅读。")])]),s._v(" "),n("h4",{attrs:{id:"例题组合-6：this-优先级相关"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例题组合-6：this-优先级相关"}},[s._v("#")]),s._v(" 例题组合 6：this 优先级相关")]),s._v(" "),n("p",[s._v("我们常常把通过 "),n("code",[s._v("call")]),s._v("、"),n("code",[s._v("apply")]),s._v("、"),n("code",[s._v("bind")]),s._v("、"),n("code",[s._v("new")]),s._v(" 对 "),n("code",[s._v("this")]),s._v(" 绑定的情况称为显式绑定；根据调用关系确定的 "),n("code",[s._v("this")]),s._v(" 指向称为隐式绑定。")]),s._v(" "),n("p",[n("strong",[s._v("那么显式绑定和隐式绑定谁的优先级更高呢？")])]),s._v(" "),n("p",[s._v("请看例题：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">foo</span> (<span class="hljs-params">a</span>) </span>{\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.a)\n}\n\n<span class="hljs-keyword">const</span> obj1 = {\n    <span class="hljs-attr">a</span>: <span class="hljs-number">1</span>,\n    <span class="hljs-attr">foo</span>: foo\n}\n\n<span class="hljs-keyword">const</span> obj2 = {\n    <span class="hljs-attr">a</span>: <span class="hljs-number">2</span>,\n    <span class="hljs-attr">foo</span>: foo\n}\n\nobj1.foo.call(obj2)\nobj2.foo.call(obj1)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("输出分别为 2、1，也就是说 "),n("code",[s._v("call")]),s._v("、"),n("code",[s._v("apply")]),s._v(" 的显式绑定一般来说优先级更高。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">foo</span> (<span class="hljs-params">a</span>) </span>{\n    <span class="hljs-keyword">this</span>.a = a\n}\n\n<span class="hljs-keyword">const</span> obj1 = {}\n\n<span class="hljs-keyword">var</span> bar = foo.bind(obj1)\nbar(<span class="hljs-number">2</span>)\n<span class="hljs-built_in">console</span>.log(obj1.a)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("上述代码通过 "),n("code",[s._v("bind")]),s._v("，将 "),n("code",[s._v("bar")]),s._v(" 函数中的 "),n("code",[s._v("this")]),s._v(" 绑定为 "),n("code",[s._v("obj1")]),s._v(" 对象。执行 "),n("code",[s._v("bar(2)")]),s._v(" 后，"),n("code",[s._v("obj1.a")]),s._v(" 值为 2。即经过 "),n("code",[s._v("bar(2)")]),s._v(" 执行后，"),n("code",[s._v("obj1")]),s._v(" 对象为："),n("code",[s._v("{a: 2}")]),s._v("。")]),s._v(" "),n("p",[s._v("当再使用 "),n("code",[s._v("bar")]),s._v(" 作为构造函数时：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-keyword">var</span> baz = <span class="hljs-keyword">new</span> bar(<span class="hljs-number">3</span>)\n<span class="hljs-built_in">console</span>.log(baz.a)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("将会输出 3。我们看 "),n("code",[s._v("bar")]),s._v(" 函数本身是通过 "),n("code",[s._v("bind")]),s._v(" 方法构造的函数，其内部已经对将 "),n("code",[s._v("this")]),s._v(" 绑定为 "),n("code",[s._v("obj1")]),s._v("，它再作为构造函数，通过 "),n("code",[s._v("new")]),s._v(" 调用时，返回的实例已经与 "),n("code",[s._v("obj1")]),s._v(" 解绑。 也就是说：")]),s._v(" "),n("p",[n("strong",[n("code",[s._v("new")]),s._v(" 绑定修改了 "),n("code",[s._v("bind")]),s._v(" 绑定中的 "),n("code",[s._v("this")]),s._v("，因此 "),n("code",[s._v("new")]),s._v(" 绑定的优先级比显式 "),n("code",[s._v("bind")]),s._v(" 绑定更高。")])]),s._v(" "),n("p",[s._v("我们再看：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">foo</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-params">a</span> =></span> {\n        <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.a)\n    };\n}\n\n<span class="hljs-keyword">const</span> obj1 = {\n    <span class="hljs-attr">a</span>: <span class="hljs-number">2</span>\n}\n\n<span class="hljs-keyword">const</span> obj2 = {\n    <span class="hljs-attr">a</span>: <span class="hljs-number">3</span>\n}\n\n<span class="hljs-keyword">const</span> bar = foo.call(obj1)\n<span class="hljs-built_in">console</span>.log(bar.call(obj2))\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("将会输出 2。由于 "),n("code",[s._v("foo()")]),s._v(" 的 "),n("code",[s._v("this")]),s._v(" 绑定到 "),n("code",[s._v("obj1")]),s._v("，"),n("code",[s._v("bar")]),s._v("（引用箭头函数）的 "),n("code",[s._v("this")]),s._v(" 也会绑定到 "),n("code",[s._v("obj1")]),s._v("，箭头函数的绑定无法被修改。")]),s._v(" "),n("p",[s._v("如果将 "),n("code",[s._v("foo")]),s._v(" 完全写成箭头函数的形式：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-keyword">var</span> a = <span class="hljs-number">123</span>\n<span class="hljs-keyword">const</span> foo = <span class="hljs-function"><span class="hljs-params">()</span> =></span> a => {\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.a)\n}\n\n<span class="hljs-keyword">const</span> obj1 = {\n    <span class="hljs-attr">a</span>: <span class="hljs-number">2</span>\n}\n\n<span class="hljs-keyword">const</span> obj2 = {\n    <span class="hljs-attr">a</span>: <span class="hljs-number">3</span>\n}\n\n<span class="hljs-keyword">var</span> bar = foo.call(obj1)\n<span class="hljs-built_in">console</span>.log(bar.call(obj2))\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("将会输出 "),n("code",[s._v("123")]),s._v("。")]),s._v(" "),n("p",[s._v("这里我再“抖个机灵”，仅仅将上述代码的第一处变量 "),n("code",[s._v("a")]),s._v(" 的赋值改为：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-keyword">const</span> a = <span class="hljs-number">123</span>\n<span class="hljs-keyword">const</span> foo = <span class="hljs-function"><span class="hljs-params">()</span> =></span> a => {\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.a)\n}\n\n<span class="hljs-keyword">const</span> obj1 = {\n    <span class="hljs-attr">a</span>: <span class="hljs-number">2</span>\n}\n\n<span class="hljs-keyword">const</span> obj2 = {\n    <span class="hljs-attr">a</span>: <span class="hljs-number">3</span>\n}\n\n<span class="hljs-keyword">var</span> bar = foo.call(obj1)\n<span class="hljs-built_in">console</span>.log(bar.call(obj2))\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("答案将会输出为 "),n("code",[s._v("undefined")]),s._v("，原因是因为使用 "),n("code",[s._v("const")]),s._v(" 声明的变量不会挂载到 "),n("code",[s._v("window")]),s._v(" 全局对象当中。因此 "),n("code",[s._v("this")]),s._v(" 指向 "),n("code",[s._v("window")]),s._v(" 时，自然也找不到 "),n("code",[s._v("a")]),s._v(" 变量了。关于 "),n("code",[s._v("const")]),s._v(" 或者 "),n("code",[s._v("let")]),s._v(" 等声明变量的方式不再本课的主题当中，我们后续也将专门进行介绍。")]),s._v(" "),n("p",[s._v("到这里，读者是否有“融会贯通”的感觉了呢？如果还有困惑，也不要灰心。进阶的关键就是基础，基础需要反复学习，“死记硬背”后才能慢慢体会。")]),s._v(" "),n("h3",{attrs:{id:"开放例题分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#开放例题分析"}},[s._v("#")]),s._v(" "),n("font",{attrs:{color:"13aa6c"}},[s._v("开放例题分析")])],1),s._v(" "),n("p",[s._v("不知道实战例题分析是否已经把你绕晕了。事实上，"),n("code",[s._v("this")]),s._v(" 的指向涉及的规范繁多，优先级也较为混乱。"),n("strong",[s._v("刻意刁难并不是很好的面试做法，一些细节候选人如果没有记住也不是太大的问题。作为面试官，我往往会另辟蹊径，出一些开放性题目。")])]),s._v(" "),n("p",[s._v("其中，最典型的一道题目为："),n("strong",[s._v("实现一个 "),n("code",[s._v("bind")]),s._v(" 函数。")])]),s._v(" "),n("p",[s._v("作为面试者，我也曾经在头条的面试流程中被问到模拟 "),n("code",[s._v("bind")]),s._v("。这道题并不新鲜，部分读者也会有自己的解答思路，而且社区上关于原生 "),n("code",[s._v("bind")]),s._v(" 的研究也很多。但是，我们这里想强调的是，可能有一些细节被大家忽略了。在回答时，我往往先实现一个初级版本，然后根据 ES5-shim 源码进一步说明。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<span class="hljs-built_in">Function</span>.prototype.bind = <span class="hljs-built_in">Function</span>.prototype.bind || <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">context</span>) </span>{\n    <span class="hljs-keyword">var</span> me = <span class="hljs-keyword">this</span>;\n    <span class="hljs-keyword">var</span> args = <span class="hljs-built_in">Array</span>.prototype.slice.call(<span class="hljs-built_in">arguments</span>, <span class="hljs-number">1</span>);\n    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bound</span> (<span class="hljs-params"></span>) </span>{\n        <span class="hljs-keyword">var</span> innerArgs = <span class="hljs-built_in">Array</span>.prototype.slice.call(<span class="hljs-built_in">arguments</span>);\n        <span class="hljs-keyword">var</span> finalArgs = args.concat(innerArgs);\n        <span class="hljs-keyword">return</span> me.apply(context, finalArgs);\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("这样的实现已经非常不错了。但是，就如同之前 "),n("code",[s._v("this")]),s._v(" 优先级分析所示："),n("strong",[n("code",[s._v("bind")]),s._v(" 返回的函数如果作为构造函数，搭配 "),n("code",[s._v("new")]),s._v(" 关键字出现的话，我们的绑定 "),n("code",[s._v("this")]),s._v(" 就需要“被忽略”。")])]),s._v(" "),n("p",[s._v("为了实现这样的规则，开发者就应该需要考虑如何区分这两种调用方式。"),n("strong",[s._v("具体来讲 "),n("code",[s._v("bound")]),s._v(" 函数中就要进行 "),n("code",[s._v("this instanceof")]),s._v(" 的判断。")])]),s._v(" "),n("p",[s._v("另外一个细节是，函数具有 "),n("code",[s._v("length")]),s._v(" 属性，表示形参的个数。上述实现方式形参的个数显然会失真。我们的实现就需要对 "),n("code",[s._v("length")]),s._v(" 属性进行还原。可是"),n("strong",[s._v("难点在于：函数的 "),n("code",[s._v("length")]),s._v(" 属性值是不可重写的。")])]),s._v(" "),n("p",[s._v("这样的内容一般属于“超纲”范畴，但在面试中能够很好地体现面试者平时的积累，以及对源码的阅读和思考，显然是加分项。对此进一步的理解，读者可参考我的原创文章："),n("a",{attrs:{href:"https://www.jianshu.com/p/6958f99db769",target:"_blank",rel:"noopener noreferrer"}},[s._v("从一道面试题，到“我可能看了假源码”"),n("OutboundLink")],1),s._v("。这篇文章发表于 2017 年年初，可以说是现在很多研究 "),n("code",[s._v("bind")]),s._v(" 相关文章的启蒙。")]),s._v(" "),n("h3",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" "),n("font",{attrs:{color:"13aa6c"}},[s._v("总结")])],1),s._v(" "),n("p",[s._v("通过本课的学习，我们看到 "),n("code",[s._v("this")]),s._v(" 纷繁多象，确实不容易彻底掌握。本节尽可能系统地进行讲解、说明，例题尽可能地覆盖更多 case。与此同时，需要读者在阅读之外继续进行消化与吸收。只有“记死”，才能“用活”。请读者随时关注课程，接下来会更新更多大家感兴趣的话题，让我们一起进步。")]),s._v(" "),n("blockquote",[n("p",[n("a",{attrs:{href:"http://gitbook.cn/m/mazi/comp/column?columnId=5c91c813968b1d64b1e08fde&utm_source=hcsd001",target:"_blank",rel:"noopener noreferrer"}},[s._v("点击了解更多《前端开发核心知识进阶》"),n("OutboundLink")],1)])]),s._v(" "),n("h3",{attrs:{id:"分享交流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分享交流"}},[s._v("#")]),s._v(" "),n("font",{attrs:{color:"13aa6c"}},[s._v("分享交流")])],1),s._v(" "),n("p",[s._v("请大家留言分享开发实践中遇到的 "),n("code",[s._v("this")]),s._v(" 相关的难忘 bug。阅读文章过程中有任何疑问随时可以跟其他小伙伴讨论，或者直接向作者 LucasHC 提问。"),n("strong",[s._v("你的分享不仅帮助他人，更会提升自己。")])]),s._v(" "),n("p",[s._v("你也可以说说自己最想了解的主题，专栏内容会根据部分读者的意见和建议迭代和完善。")]),s._v(" "),n("p",[s._v("此外，我们为本课程"),n("strong",[s._v("付费读者")]),s._v("创建了《前端开发核心知识进阶》微信交流群，以方便更有针对性地讨论课程相关问题。（入群请到第 4 篇末尾添加 GitChat 小助手伽利略的微信，注明「前端核心」。）")])])}),[],!1,null,null,null);a.default=e.exports}}]);